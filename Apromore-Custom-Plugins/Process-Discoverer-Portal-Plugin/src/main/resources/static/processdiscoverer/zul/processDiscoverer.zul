<!--
  #%L
  This file is part of "Apromore Core".
  %%
  Copyright (C) 2018 - 2022 Apromore Pty Ltd.
  %%
  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU Lesser General Public License as
  published by the Free Software Foundation, either version 3 of the
  License, or (at your option) any later version.
  
  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Lesser Public License for more details.
  
  You should have received a copy of the GNU General Lesser Public
  License along with this program.  If not, see
  <http://www.gnu.org/licenses/lgpl-3.0.html>.
  #L%
  -->


<?page id="ap-pd2" title="${labels.brand_shortName} - Process Discoverer" contentType="text/html;charset=UTF-8" ?>
<?component name="pdheader" macroURI="~./processdiscoverer/macros/header.zul" ?>
<?component name="pdtoolbar" macroURI="~./processdiscoverer/macros/toolbar.zul" ?>

<?component name="menuitem" extends="menuitem" autocheck="true" checkmark="true" ?> 
<?component name="viewSettings" macroURI="~./processdiscoverer/macros/viewSettings.zul" ?>
<?component name="graphSettings" macroURI="~./processdiscoverer/macros/graphSettings.zul" ?>
<?component name="logStats" macroURI="~./processdiscoverer/macros/logStats.zul" ?>
<?component name="timeStats" macroURI="~./processdiscoverer/macros/timeStats.zul" ?>
<?component name="animation" macroURI="~./processdiscoverer/macros/animation.zul" ?>


<?link rel="shortcut icon" href="~./themes/${labels.theme}/common/img/brand/favicon.ico" ?>
<?link rel="stylesheet" href="~./css/chiaroscuro.css" type="text/css" ?>
<?link rel="stylesheet" href="~./processdiscoverer/js/spectrum/2.0.5/spectrum.css" ?>
<?link rel="stylesheet" href="~./themes/${labels.theme}/common/css/index.css" type="text/css" ?>
<?link rel="stylesheet" href="~./processdiscoverer/css/ap/pd.css" type="text/css" ?>
<?link rel="stylesheet" href="~./processdiscoverer/css/ap/animation.css" type="text/css" ?>
<?link rel="stylesheet" href="~./themes/${labels.theme}/portal/css/portal.css" type="text/css" ?>
<?link rel="stylesheet" href="~./processdiscoverer/css/jquery-ui.css" type="text/css" ?>
<?link rel="stylesheet" href="~./processdiscoverer/css/jquery-ui-slider-pips.css" type="text/css" ?>

<?script src="~./themes/ap/common/js/index.js"?>

<zk xmlns="http://www.zkoss.org/2005/zul"
    xmlns:h="http://www.w3.org/1999/xhtml" 
    xmlns:w="client"
    xmlns:n="native"
    xmlns:ca="client/attribute"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.zkoss.org/2005/zul http://www.zkoss.org/2005/zul/zul.xsd">

  <style src="~./processdiscoverer/css/tippy.v4.0.1.css"/>
  <script><![CDATA[
    Ap.theme = '${labels.theme}';
  ]]></script>
  <script src="~./processdiscoverer/js/ap/processdiscoverer.js"></script>

  <!-- Header of the page -->
  <pdheader pdLabels="${arg.pdLabels}" />
  
  <window id="win" border="0" closable="false" height="100%" width="100%" sclass="ap-pd ap-font-base"
          apply="org.apromore.plugin.portal.processdiscoverer.PDController">
    
    <!-- This caption/title/menubar is positioned within the header above in CSS -->
    <!-- These header items must be placed under window component to be set dynamically via server code -->
    <caption id="windowcaption" sclass="mainCaption">
      <div id="utilityTools" sclass="ap-pd-tools"/>
    </caption>
    <menubar sclass="ap-user-menu" id="userMenu" style="position: absolute;" apply="org.apromore.portal.dialogController.UserMenuController" />

    <!-- Toolbar of the page -->
    <pdtoolbar id="toolbar" pdLabels="${arg.pdLabels}" />

    <!-- Main UI -->
    <n:div class="ap-pd-main-torso">
      <!-- Option area -->
      <div ca:data-t="ap-pd-aux">
        <div sclass="ap-pd-drawer">
          <hlayout width="100%" height="182px" valign="top" spacing="0px">
            <!-- View settings -->
            <div hflex="2"></div>
            <viewSettings sclass="ap-pd-drawer-box" width="300px" pdLabels="${arg.pdLabels}"/>
            <div hflex="2"></div>
            <div sclass="ap-panel-sep" vflex="1" hflex="1">
              <n:div></n:div>
            </div>
            
            <!-- Graph abstraction settings -->
            <div hflex="2"></div>
            <graphSettings sclass="ap-pd-drawer-box" hflex="122" pdLabels="${arg.pdLabels}" />
            <div hflex="2"></div>
            <div sclass="ap-panel-sep" vflex="1" hflex="1">
              <n:div></n:div>
            </div>
            
            <!-- Log stats -->
            <logStats sclass="ap-pd-drawer-box" hflex="156" pdLabels="${arg.pdLabels}" />
            <div sclass="ap-panel-sep" vflex="1" hflex="1">
              <n:div></n:div>
            </div>
            
            <!-- Time stats -->
            <timeStats sclass="ap-pd-drawer-box" hflex="92" pdLabels="${arg.pdLabels}" />
          </hlayout>
        </div>
      </div>
      
      <!-- Graph Area -->
      <n:div id="ap-pd-process-model" style="background-color:none;"/>
      <div id="vizBridge" visible="false"></div>
      
      <!-- Animation Control Panel -->
      <animation />
    </n:div>
  </window>
  
  <n:script type="text/javascript" defer="defer" src="../../themes/ap/common/js/css-browser-selector.js"></n:script>
  <n:script defer="true">
    <![CDATA[
    
    Ap.pd = new Apromore.ProcessDiscoverer('${arg.pluginExecutionId}', 
                        'ap-pd-process-model', 
                        'ap-pd-la',
                        'ap-pd-la-timeline',
                        'ap-pd-la-speed-control',
                        'ap-la-progress',
                        'ap-la-info-tip',
                        'ap-pd-la-clock',
                        'ap-pd-la-buttons',
                        'ap-mc-icon-play',
                        'ap-mc-icon-pause',
                        'FREQUENCY');

    zk.afterMount(function () {
        zAu.send(new zk.Event(zk.Widget.$('$win'), 'onLoaded'));
        setTimeout(function () {
            try {
                Ap.pd.installComboitemHandlers();
            } catch (e) {
                // pass
            }
        }, 1000); 
        
        document.addEventListener("click", (evt) => {
            const el = Ap.pd.getSearchOptionEl();
            const input = Ap.pd.getSearchInputEl();
            const target = evt.target;
            if (el !== target && input !== target) {
                Ap.pd.updateSelectedNodes();
            }
        });
    });

    ]]>
  </n:script>
</zk>